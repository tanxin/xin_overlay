diff -urN linden/indra/newview/app_settings/settings.xml linden-patched/indra/newview/app_settings/settings.xml
--- linden/indra/newview/app_settings/settings.xml	2008-12-12 02:55:23.000000000 +0100
+++ linden-patched/indra/newview/app_settings/settings.xml	2008-12-19 11:30:05.000000000 +0100
@@ -3169,6 +3169,22 @@
         <integer>400</integer>
       </array>
     </map>
+    <key>FloaterTeleportHistoryRect</key>
+    <map>
+      <key>Comment</key>
+      <string>Rectangle for teleport history window</string>
+      <key>Persist</key>
+      <integer>1</integer>
+      <key>Type</key>
+      <string>Rect</string>
+      <key>Value</key>
+      <array>
+        <integer>20</integer>
+        <integer>20</integer>
+        <integer>470</integer>
+        <integer>200</integer>
+      </array>
+    </map>
     <key>FloaterViewBottom</key>
     <map>
       <key>Comment</key>
diff -urN linden/indra/newview/CMakeLists.txt linden-patched/indra/newview/CMakeLists.txt
--- linden/indra/newview/CMakeLists.txt	2008-12-12 02:55:20.000000000 +0100
+++ linden-patched/indra/newview/CMakeLists.txt	2008-12-19 11:30:05.000000000 +0100
@@ -180,6 +180,7 @@
     llfloatersnapshot.cpp
     llfloaterstats.cpp
     llfloatertelehub.cpp
+    llfloaterteleporthistory.cpp
     llfloatertest.cpp
     llfloatertools.cpp
     llfloatertopobjects.cpp
@@ -575,6 +576,7 @@
     llfloatersnapshot.h
     llfloaterstats.h
     llfloatertelehub.h
+    llfloaterteleporthistory.h
     llfloatertest.h
     llfloatertools.h
     llfloatertopobjects.h
@@ -1111,6 +1113,7 @@
     skins/default/xui/en-us/floater_snapshot.xml
     skins/default/xui/en-us/floater_sound_preview.xml
     skins/default/xui/en-us/floater_telehub.xml
+    skins/default/xui/en-us/floater_teleport_history.xml
     skins/default/xui/en-us/floater_test.xml
     skins/default/xui/en-us/floater_texture_ctrl.xml
     skins/default/xui/en-us/floater_tools.xml
diff -urN linden/indra/newview/llfloaterteleporthistory.cpp linden-patched/indra/newview/llfloaterteleporthistory.cpp
--- linden/indra/newview/llfloaterteleporthistory.cpp	1970-01-01 01:00:00.000000000 +0100
+++ linden-patched/indra/newview/llfloaterteleporthistory.cpp	2008-12-19 11:30:05.000000000 +0100
@@ -0,0 +1,224 @@
+/** 
+ * @file llfloaterteleporthistory.cpp
+ * @author Zi Ree
+ * @brief LLFloaterTeleportHistory class implementation
+ *
+ * $LicenseInfo:firstyear=2001&license=viewergpl$
+ * 
+ * Copyright (c) 2008, Linden Research, Inc.
+ * 
+ * Second Life Viewer Source Code
+ * The source code in this file ("Source Code") is provided by Linden Lab
+ * to you under the terms of the GNU General Public License, version 2.0
+ * ("GPL"), unless you have obtained a separate licensing agreement
+ * ("Other License"), formally executed by you and Linden Lab.  Terms of
+ * the GPL can be found in doc/GPL-license.txt in this distribution, or
+ * online at http://secondlifegrid.net/programs/open_source/licensing/gplv2
+ * 
+ * There are special exceptions to the terms and conditions of the GPL as
+ * it is applied to this Source Code. View the full text of the exception
+ * in the file doc/FLOSS-exception.txt in this software distribution, or
+ * online at http://secondlifegrid.net/programs/open_source/licensing/flossexception
+ * 
+ * By copying, modifying or distributing this software, you acknowledge
+ * that you have read and understood your obligations described above,
+ * and agree to abide by those obligations.
+ * 
+ * ALL LINDEN LAB SOURCE CODE IS PROVIDED "AS IS." LINDEN LAB MAKES NO
+ * WARRANTIES, EXPRESS, IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY,
+ * COMPLETENESS OR PERFORMANCE.
+ * $/LicenseInfo$
+ */
+
+#include "llviewerprecompiledheaders.h"
+
+#include "linden_common.h"
+
+#include "llfloaterteleporthistory.h"
+#include "llfloaterworldmap.h"
+#include "lltimer.h"
+#include "lluictrlfactory.h"
+#include "llurldispatcher.h"
+#include "llurlsimstring.h"
+#include "llviewercontrol.h"   // gSavedSettings
+#include "llviewerwindow.h"
+#include "llweb.h"
+
+#include "apr_time.h"
+
+// globals
+LLFloaterTeleportHistory* gFloaterTeleportHistory;
+
+LLFloaterTeleportHistory::LLFloaterTeleportHistory()
+:	LLFloater(std::string("teleporthistory")),
+	mPlacesList(NULL),
+	id(0)
+{
+	LLUICtrlFactory::getInstance()->buildFloater(this, "floater_teleport_history.xml", NULL);
+}
+
+// virtual
+LLFloaterTeleportHistory::~LLFloaterTeleportHistory()
+{
+}
+
+// virtual
+void LLFloaterTeleportHistory::onFocusReceived()
+{
+	// take care to enable or disable buttons depending on the selection in the places list
+	if(mPlacesList->getFirstSelected())
+	{
+		setButtonsEnabled(TRUE);
+	}
+	else
+	{
+		setButtonsEnabled(FALSE);
+	}
+	LLFloater::onFocusReceived();
+}
+
+BOOL LLFloaterTeleportHistory::postBuild()
+{
+	// make sure the cached pointer to the scroll list is valid
+	mPlacesList=getChild<LLScrollListCtrl>("places_list");
+	if(!mPlacesList)
+	{
+		llwarns << "coud not get pointer to places list" << llendl;
+		return FALSE;
+	}
+
+	// setup callbacks for the scroll list
+	mPlacesList->setDoubleClickCallback(onTeleport);
+	childSetCommitCallback("places_list", onPlacesSelected, this);
+	childSetAction("teleport", onTeleport, this);
+	childSetAction("show_on_map", onShowOnMap, this);
+	childSetAction("copy_slurl", onCopySLURL, this);
+
+	return TRUE;
+}
+
+void LLFloaterTeleportHistory::addEntry(std::string regionName, S16 x, S16 y, S16 z)
+{
+	// only if the cached scroll list pointer is valid
+	if(mPlacesList)
+	{
+		// prepare display of position
+		std::string position=llformat("%d, %d, %d", x, y, z);
+		// prepare simstring for later parsing
+		std::string simString = regionName + llformat("/%d/%d/%d", x, y, z); 
+		simString = LLWeb::escapeURL(simString);
+
+		// check if we are in daylight savings time
+		std::string timeZone = "PST";
+		if(is_daylight_savings()) timeZone = "PDT";
+
+		// do all time related stuff as closely together as possible, because every other operation
+		// might change the internal tm* buffer
+		struct tm* internal_time;
+		internal_time = utc_to_pacific_time(time_corrected(), is_daylight_savings());
+		std::string timeString=llformat("%02d:%02d:%02d ", internal_time->tm_hour, internal_time->tm_min, internal_time->tm_sec)+timeZone;
+
+		// build the list entry
+		LLSD value;
+		value["id"] = id;
+		value["columns"][0]["column"] = "region";
+		value["columns"][0]["value"] = regionName;
+		value["columns"][1]["column"] = "position";
+		value["columns"][1]["value"] = position;
+		value["columns"][2]["column"] = "visited";
+		value["columns"][2]["value"] = timeString;
+
+		// these columns are hidden and serve as data storage for simstring and SLURL
+		value["columns"][3]["column"] = "slurl";
+		value["columns"][3]["value"] = LLURLDispatcher::buildSLURL(regionName, x, y, z);
+		value["columns"][4]["column"] = "simstring";
+		value["columns"][4]["value"] = simString;
+
+		// add the new list entry on top of the list, deselect all and disable the buttons
+		mPlacesList->addElement(value, ADD_TOP);
+		mPlacesList->deselectAllItems(TRUE);
+		setButtonsEnabled(FALSE);
+		id++;
+	}
+	else
+	{
+		llwarns << "pointer to places list is NULL" << llendl;
+	}
+}
+
+void LLFloaterTeleportHistory::setButtonsEnabled(BOOL on)
+{
+	// enable or disable buttons
+	childSetEnabled("teleport", on);
+	childSetEnabled("show_on_map", on);
+	childSetEnabled("copy_slurl", on);
+}
+
+// virtual
+void LLFloaterTeleportHistory::onClose(bool app_quitting)
+{
+	LLFloater::setVisible(FALSE);
+}
+
+// virtual
+BOOL LLFloaterTeleportHistory::canClose()
+{
+	return !LLApp::isExiting();
+}
+
+// callbacks
+
+// static
+void LLFloaterTeleportHistory::onPlacesSelected(LLUICtrl* /* ctrl */, void* data)
+{
+	LLFloaterTeleportHistory* self = (LLFloaterTeleportHistory*) data;
+
+	// on selection change check if we need to enable or disable buttons
+	if(self->mPlacesList->getFirstSelected())
+	{
+		self->setButtonsEnabled(TRUE);
+	}
+	else
+	{
+		self->setButtonsEnabled(FALSE);
+	}
+}
+
+// static
+void LLFloaterTeleportHistory::onTeleport(void* data)
+{
+	LLFloaterTeleportHistory* self = (LLFloaterTeleportHistory*) data;
+
+	// build secondlife::/app link from simstring for instant teleport to destination
+	std::string slapp="secondlife:///app/teleport/" + self->mPlacesList->getFirstSelected()->getColumn(4)->getValue().asString();
+	LLURLDispatcher::dispatch(slapp, FALSE);
+}
+
+// static
+void LLFloaterTeleportHistory::onShowOnMap(void* data)
+{
+	LLFloaterTeleportHistory* self = (LLFloaterTeleportHistory*) data;
+
+	// get simstring from selected entry and parse it for its components
+	std::string simString = self->mPlacesList->getFirstSelected()->getColumn(4)->getValue().asString();
+	std::string region = "";
+	S32 x = 128;
+	S32 y = 128;
+	S32 z = 20;
+
+	LLURLSimString::parse(simString, &region, &x, &y, &z);
+
+	// point world map at position
+	gFloaterWorldMap->trackURL(region, x, y, z);
+	LLFloaterWorldMap::show(NULL, TRUE);
+}
+
+// static
+void LLFloaterTeleportHistory::onCopySLURL(void* data)
+{
+	LLFloaterTeleportHistory* self = (LLFloaterTeleportHistory*) data;
+
+	// get SLURL of the selected entry and copy it to the clipboard
+	std::string SLURL=self->mPlacesList->getFirstSelected()->getColumn(3)->getValue().asString();
+	gViewerWindow->mWindow->copyTextToClipboard(utf8str_to_wstring(SLURL));
+}
diff -urN linden/indra/newview/llfloaterteleporthistory.h linden-patched/indra/newview/llfloaterteleporthistory.h
--- linden/indra/newview/llfloaterteleporthistory.h	1970-01-01 01:00:00.000000000 +0100
+++ linden-patched/indra/newview/llfloaterteleporthistory.h	2008-12-19 11:30:05.000000000 +0100
@@ -0,0 +1,86 @@
+/**
+ * @file llfloaterteleporthistory.h
+ * @author Zi Ree
+ * @brief LLFloaterTeleportHistory class definition
+ *
+ * This class implements a floater where all visited teleport locations are
+ * stored, so the resident can quickly see where they have been and go back
+ * by selecting the location from the list.
+ *
+ * $LicenseInfo:firstyear=2007&license=viewergpl$
+ * 
+ * Copyright (c) 2008, Linden Research, Inc.
+ * 
+ * Second Life Viewer Source Code
+ * The source code in this file ("Source Code") is provided by Linden Lab
+ * to you under the terms of the GNU General Public License, version 2.0
+ * ("GPL"), unless you have obtained a separate licensing agreement
+ * ("Other License"), formally executed by you and Linden Lab.  Terms of
+ * the GPL can be found in doc/GPL-license.txt in this distribution, or
+ * online at http://secondlifegrid.net/programs/open_source/licensing/gplv2
+ * 
+ * There are special exceptions to the terms and conditions of the GPL as
+ * it is applied to this Source Code. View the full text of the exception
+ * in the file doc/FLOSS-exception.txt in this software distribution, or
+ * online at http://secondlifegrid.net/programs/open_source/licensing/flossexception
+ * 
+ * By copying, modifying or distributing this software, you acknowledge
+ * that you have read and understood your obligations described above,
+ * and agree to abide by those obligations.
+ * 
+ * ALL LINDEN LAB SOURCE CODE IS PROVIDED "AS IS." LINDEN LAB MAKES NO
+ * WARRANTIES, EXPRESS, IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY,
+ * COMPLETENESS OR PERFORMANCE.
+ * $/LicenseInfo$
+ */
+
+#ifndef LL_LLFLOATERTELEPORTHISTORY_H
+#define LL_LLFLOATERTELEPORTHISTORY_H
+
+#include "linden_common.h"
+
+#include "lldefs.h"
+#include "llfloater.h"
+#include "llscrolllistctrl.h"
+
+class LLFloaterTeleportHistory : public LLFloater
+{
+	public:
+		LLFloaterTeleportHistory();
+		virtual ~LLFloaterTeleportHistory();
+
+		/// @brief: reimplemented to check for selection changes in the places list scrolllist
+		virtual void onFocusReceived();
+
+		/// @brief: reimplemented to make the menu toggle work
+		virtual void onClose(bool app_quitting);
+
+		/// @brief: reimplemented to prevent this floater from closing while the viewer is shutting down
+		virtual BOOL canClose();
+
+		BOOL postBuild();
+
+		/// @brief: adds a teleport destination to the list of visited places
+		void addEntry(std::string regionName, S16 x, S16 y, S16 z);
+
+	protected:
+		static void onPlacesSelected(LLUICtrl* ctrl, void* data);
+		static void onTeleport(void* data);
+		static void onShowOnMap(void* data);
+		static void onCopySLURL(void* data);
+
+		/// @brief: enables or disables the "Teleport", "Show On Map" and "Copy To SLURL" buttons **/
+		void setButtonsEnabled(BOOL on);
+
+		LLScrollListCtrl* mPlacesList;
+
+		S32 id;
+
+		/// @brief: to see if this was the first time setVisible() was called (at program startup)
+		BOOL firstRun;
+};
+
+// globals
+extern LLFloaterTeleportHistory* gFloaterTeleportHistory;
+
+#endif
diff -urN linden/indra/newview/llviewermenu.cpp linden-patched/indra/newview/llviewermenu.cpp
--- linden/indra/newview/llviewermenu.cpp	2008-12-12 02:55:22.000000000 +0100
+++ linden-patched/indra/newview/llviewermenu.cpp	2008-12-19 11:30:05.000000000 +0100
@@ -124,6 +124,7 @@
 #include "llfloatersettingsdebug.h"
 #include "llfloaterenvsettings.h"
 #include "llfloaterstats.h"
+#include "llfloaterteleporthistory.h"
 #include "llfloatertest.h"
 #include "llfloatertools.h"
 #include "llfloaterwater.h"
@@ -5162,6 +5163,10 @@
 		{
 			LLFloaterChat::toggleInstance(LLSD());
 		}
+		else if (floater_name == "teleport history")
+		{
+			gFloaterTeleportHistory->setVisible(!gFloaterTeleportHistory->getVisible());
+		}
 		else if (floater_name == "im")
 		{
 			LLFloaterChatterBox::toggleInstance(LLSD());
@@ -5302,6 +5307,10 @@
 		{
 			new_value = LLFloaterChat::instanceVisible();
 		}
+		else if (floater_name == "teleport history")
+		{
+			new_value = gFloaterTeleportHistory->getVisible();
+		}
 		else if (floater_name == "im")
 		{
 			new_value = LLFloaterMyFriends::instanceVisible(0);
diff -urN linden/indra/newview/llviewermessage.cpp linden-patched/indra/newview/llviewermessage.cpp
--- linden/indra/newview/llviewermessage.cpp	2008-12-12 02:55:21.000000000 +0100
+++ linden-patched/indra/newview/llviewermessage.cpp	2008-12-19 11:30:05.000000000 +0100
@@ -85,6 +85,7 @@
 #include "llfloatermute.h"
 #include "llfloaterpostcard.h"
 #include "llfloaterpreference.h"
+#include "llfloaterteleporthistory.h"
 #include "llfollowcam.h"
 #include "llgroupnotify.h"
 #include "llhudeffect.h"
@@ -2753,6 +2754,9 @@
 			avatarp->clearChat();
 			avatarp->slamPosition();
 		}
+
+		// add teleport destination to the list of visited places
+		gFloaterTeleportHistory->addEntry(regionp->getName(),(S16)agent_pos.mV[0],(S16)agent_pos.mV[1],(S16)agent_pos.mV[2]);
 	}
 	else
 	{
diff -urN linden/indra/newview/llviewerwindow.cpp linden-patched/indra/newview/llviewerwindow.cpp
--- linden/indra/newview/llviewerwindow.cpp	2008-12-12 02:55:22.000000000 +0100
+++ linden-patched/indra/newview/llviewerwindow.cpp	2008-12-19 11:30:05.000000000 +0100
@@ -104,6 +104,7 @@
 #include "llfloaternamedesc.h"
 #include "llfloaterpreference.h"
 #include "llfloatersnapshot.h"
+#include "llfloaterteleporthistory.h"
 #include "llfloatertools.h"
 #include "llfloaterworldmap.h"
 #include "llfocusmgr.h"
@@ -1873,6 +1874,10 @@
 		gFloaterWorldMap = new LLFloaterWorldMap();
 		gFloaterWorldMap->setVisible(FALSE);
 
+		// open teleport history floater and hide it initially
+		gFloaterTeleportHistory = new LLFloaterTeleportHistory();
+		gFloaterTeleportHistory->setVisible(FALSE);
+
 		//
 		// Tools for building
 		//
diff -urN linden/indra/newview/skins/default/xui/en-us/floater_teleport_history.xml linden-patched/indra/newview/skins/default/xui/en-us/floater_teleport_history.xml
--- linden/indra/newview/skins/default/xui/en-us/floater_teleport_history.xml	1970-01-01 01:00:00.000000000 +0100
+++ linden-patched/indra/newview/skins/default/xui/en-us/floater_teleport_history.xml	2008-12-19 11:30:05.000000000 +0100
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
+<floater can_close="true" can_drag_on_left="false" can_minimize="true" can_resize="true"
+		min_width="470" min_height="150" width="470" height="200" name="teleporthistory"
+		rect_control="FloaterTeleportHistoryRect" title="Teleport History">
+	<scroll_list background_visible="true" draw_border="true" draw_stripes="true"
+		draw_heading="true" follows="left|top|right|bottom" left="10" top="10" width="450"
+		height="150" bottom_delta="-170" multi_select="false" name="places_list">
+		<column dynamicwidth="true" label="Region" name="region" />
+		<column dynamicwidth="true" label="Position" name="position" />
+		<column dynamicwidth="true" label="Visited" name="visited" />
+		<!--Hidden fields, used as storage for prebuilt strings, please keep at width 0-->
+		<column width="0" label="SLURL" name="slurl" />
+		<column width="0" label="Sim String" name="simstring" />
+	</scroll_list>
+	<button
+		bottom_delta="-24" enabled="false" follows="left|bottom" font="SansSerif" halign="center"
+		width="90" height="20" label="Teleport" label_selected="Teleport"
+		left="10" mouse_opaque="true" name="teleport" tool_tip="Teleport to selected location" />
+	<button bottom_delta="0" enabled="false" follows="left|bottom" font="SansSerif" halign="center"
+		height="20" label="Show On Map" label_selected="Show On Map"
+		left_delta="100" mouse_opaque="true" name="show_on_map"
+		tool_tip="Center map on this location" width="125" />
+	<button bottom_delta="0" enabled="false" follows="bottom|right" font="SansSerif"
+		height="20" label="Copy SLURL to clipboard" left="-230" name="copy_slurl"
+		tool_tip="Copies current location as SLURL to be used on the web."
+		width="222" />
+</floater>
diff -urN linden/indra/newview/skins/default/xui/en-us/menu_viewer.xml linden-patched/indra/newview/skins/default/xui/en-us/menu_viewer.xml
--- linden/indra/newview/skins/default/xui/en-us/menu_viewer.xml	2008-12-12 02:55:25.000000000 +0100
+++ linden-patched/indra/newview/skins/default/xui/en-us/menu_viewer.xml	2008-12-19 11:30:52.000000000 +0100
@@ -284,6 +284,11 @@
 			<on_click function="ShowFloater" userdata="mute list" />
 			<on_check function="FloaterVisible" userdata="mute list" />
 		</menu_item_check>
+		<menu_item_check bottom="189" enabled="true" height="19" label="Teleport History" left="0"
+						 mouse_opaque="true" name="Teleport History" shortcut="" width="211">
+			<on_click function="ShowFloater" userdata="teleport history" />
+			<on_check function="FloaterVisible" userdata="teleport history" />
+		</menu_item_check>
 		<menu_item_separator bottom="-197" enabled="true" height="8" label="-----------" left="0"
 		     mouse_opaque="true" name="separator2" width="211" />
 		<menu_item_check bottom="-216" enabled="true" height="19" label="Camera Controls" left="0"
